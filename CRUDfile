import java.io.*;
import java.util.Scanner;

public class Employee {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("Menu:");
            System.out.println("1. Insert Data into File");
            System.out.println("2. Delete Data from File");
            System.out.println("3. Update Data in File");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");

            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    insertDataToFile();
                    break;
                case 2:
                    deleteDataFromFile();
                    break;
                case 3:
                    updateDataInFile();
                    break;
                case 4:
                    System.out.println("Exiting program. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        }
    }

    private static void insertDataToFile() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter data to insert into the file: ");
        String data = scanner.nextLine();

        try (BufferedWriter writer = new BufferedWriter(new FileWriter("output.txt", true))) {
            writer.write(data);
            writer.newLine();
            System.out.println("Data inserted into the file successfully.");
        } catch (IOException e) {
            System.out.println("An error occurred while writing to the file.");
            e.printStackTrace();
        }
    }

    private static void deleteDataFromFile() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter data to delete from the file: ");
        String dataToDelete = scanner.nextLine();

        try {
            File inputFile = new File("output.txt");
            File tempFile = new File("temp.txt");

            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));

            String currentLine;

            while ((currentLine = reader.readLine()) != null) {
                if (!currentLine.equals(dataToDelete)) {
                    writer.write(currentLine + System.getProperty("line.separator"));
                }
            }

            writer.close();
            reader.close();

            if (inputFile.delete()) {
                if (!tempFile.renameTo(inputFile)) {
                    System.out.println("Error updating the file.");
                } else {
                    System.out.println("Data deleted from the file successfully.");
                }
            } else {
                System.out.println("Error deleting the data from the file.");
            }
        } catch (IOException e) {
            System.out.println("An error occurred while reading/writing to the file.");
            e.printStackTrace();
        }
    }

    private static void updateDataInFile() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter data to update in the file: ");
        String oldData = scanner.nextLine();
        System.out.print("Enter new data: ");
        String newData = scanner.nextLine();

        try {
            File inputFile = new File("output.txt");
            File tempFile = new File("temp.txt");

            BufferedReader reader = new BufferedReader(new FileReader(inputFile));
            BufferedWriter writer = new BufferedWriter(new FileWriter(tempFile));

            String currentLine;

            while ((currentLine = reader.readLine()) != null) {
                if (currentLine.equals(oldData)) {
                    writer.write(newData + System.getProperty("line.separator"));
                } else {
                    writer.write(currentLine + System.getProperty("line.separator"));
                }
            }

            writer.close();
            reader.close();

            if (inputFile.delete()) {
                if (!tempFile.renameTo(inputFile)) {
                    System.out.println("Error updating the file.");
                } else {
                    System.out.println("Data updated in the file successfully.");
                }
            } else {
                System.out.println("Error updating the data in the file.");
            }
        } catch (IOException e) {
            System.out.println("An error occurred while reading/writing to the file.");
            e.printStackTrace();
        }
    }
}
